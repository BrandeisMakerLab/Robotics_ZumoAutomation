<?xml version="1.0" encoding="UTF-8"?>
<testrun name="Arduino Class Maker" project="Arduino Class Maker" tests="16" started="16" failures="1" errors="0" ignored="0">
  <testsuite name="parsing.MiniScannerTest" time="0.0">
    <testcase name="testNoHasNext" classname="parsing.MiniScannerTest" time="0.0"/>
    <testcase name="exceptionSafeNext" classname="parsing.MiniScannerTest" time="0.0"/>
    <testcase name="exceptionSafeHasNext" classname="parsing.MiniScannerTest" time="0.0"/>
    <testcase name="nullBaseHasNext" classname="parsing.MiniScannerTest" time="0.0"/>
    <testcase name="nullBaseNext" classname="parsing.MiniScannerTest" time="0.0"/>
    <testcase name="testTokens" classname="parsing.MiniScannerTest" time="0.0"/>
  </testsuite>
  <testsuite name="testBackgroundCode.AssertMethodsTest" time="0.0">
    <testcase name="arrEqualNull" classname="testBackgroundCode.AssertMethodsTest" time="0.0"/>
    <testcase name="arrEqualLength" classname="testBackgroundCode.AssertMethodsTest" time="0.0"/>
    <testcase name="arrEqualMethods" classname="testBackgroundCode.AssertMethodsTest" time="0.0"/>
    <testcase name="assertEqualsFeedbackTest" classname="testBackgroundCode.AssertMethodsTest" time="0.0"/>
    <testcase name="assertEqualsFeedbackLineNumTest" classname="testBackgroundCode.AssertMethodsTest" time="0.0"/>
  </testsuite>
  <testsuite name="classGenerators.ArduinoClassCppTest" time="0.0">
    <testcase name="testCppOutput" classname="classGenerators.ArduinoClassCppTest" time="0.0"/>
    <testcase name="testCppOutputAllBoards" classname="classGenerators.ArduinoClassCppTest" time="0.0"/>
  </testsuite>
  <testsuite name="classGenerators.ArduinoClassHTest" time="0.001">
    <testcase name="testHOutput" classname="classGenerators.ArduinoClassHTest" time="0.0"/>
    <testcase name="testHOutputAllBoards" classname="classGenerators.ArduinoClassHTest" time="0.001">
      <failure>
        <expected>/* Written by Jacob Smith for Brandeis Robotics Club 2019/05/15
A timer class to allow the user to create loops and maintain program control
Boards supported: ARDUINO_AVR_UNO ESP8266_WEMOSD1R1*/

//sets up the Timer Header file
#ifndef Timer_h
#define Timer_h

//this should work on all boards, so there is no preprocessor directive here

//includes the libraries of code necessary to make this one work
#include &lt;Timer.h&gt;
#include &lt;Apple.h&gt;

class Timer{
  private:
    //the beginning time of the interval
    long initTime;
    //a test varible for the parser
    Apple test;
  public:
    //Creates a new Timer object
    Timer();
    //resets the Initial Time
    long resetTime();
    //returns the current time
    long getTime();
    //returns the current time and the initial time
    long getAndResetTime();
};
#endif</expected>
        <actual>/* Written by Jacob Smith for Brandeis Robotics Club 2019/05/15
A timer class to allow the user to create loops and maintain program control
Boards supported: ALL*/

//sets up the Timer Header file
#ifndef Timer_h
#define Timer_h

//this should work on all boards, so there is no preprocessor directive here

//includes the libraries of code necessary to make this one work
#include &lt;Timer.h&gt;
#include &lt;Apple.h&gt;

class Timer{
  private:
    //the beginning time of the interval
    long initTime;
    //a test varible for the parser
    Apple test;
  public:
    //Creates a new Timer object
    Timer();
    //resets the Initial Time
    long resetTime();
    //returns the current time
    long getTime();
    //returns the current time and the initial time
    long getAndResetTime();
};
#elif defined (DONT_NEED_TIMER)
  #warning : May lead to error: 'Timer' does not name a type ; Program to Board Incompatibility ; One of the libraries you are using will not work with your board ; For more information, go to cse230.artifice.cc/lecture/splitting-code.html
#else
  #error : Program to Board Incompatibility ; One of the libraries you are using will not work with your board ; Quick fix: add &lt;#define DONT_NEED_TIMER&gt; to top ; For more information, go to cse230.artifice.cc/lecture/splitting-code.html
#endif
#endif</actual>org.junit.ComparisonFailure: expected:&lt;...
Boards supported: A[RDUINO_AVR_UNO ESP8266_WEMOSD1R1*/

//sets up the Timer Header file
#ifndef Timer_h
#define Timer_h

//this should work on all boards, so there is no preprocessor directive here

//includes the libraries of code necessary to make this one work
#include &lt;Timer.h&gt;
#include &lt;Apple.h&gt;

class Timer{
  private:
    //the beginning time of the interval
    long initTime;
    //a test varible for the parser
    Apple test;
  public:
    //Creates a new Timer object
    Timer();
    //resets the Initial Time
    long resetTime();
    //returns the current time
    long getTime();
    //returns the current time and the initial time
    long getAndResetTime();
};]
#endif&gt; but was:&lt;...
Boards supported: A[LL*/

//sets up the Timer Header file
#ifndef Timer_h
#define Timer_h

//this should work on all boards, so there is no preprocessor directive here

//includes the libraries of code necessary to make this one work
#include &lt;Timer.h&gt;
#include &lt;Apple.h&gt;

class Timer{
  private:
    //the beginning time of the interval
    long initTime;
    //a test varible for the parser
    Apple test;
  public:
    //Creates a new Timer object
    Timer();
    //resets the Initial Time
    long resetTime();
    //returns the current time
    long getTime();
    //returns the current time and the initial time
    long getAndResetTime();
};
#elif defined (DONT_NEED_TIMER)
  #warning : May lead to error: 'Timer' does not name a type ; Program to Board Incompatibility ; One of the libraries you are using will not work with your board ; For more information, go to cse230.artifice.cc/lecture/splitting-code.html
#else
  #error : Program to Board Incompatibility ; One of the libraries you are using will not work with your board ; Quick fix: add &lt;#define DONT_NEED_TIMER&gt; to top ; For more information, go to cse230.artifice.cc/lecture/splitting-code.html
#endif]
#endif&gt;
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at classGenerators.ArduinoClassHTest.testHOutputAllBoards(ArduinoClassHTest.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)

</failure>
    </testcase>
    <testcase name="testKeywordsOutput" classname="classGenerators.ArduinoClassHTest" time="0.0"/>
  </testsuite>
</testrun>
