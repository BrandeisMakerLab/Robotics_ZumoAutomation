/** Name: Jacob Smith
 *  Email:jsmith2021@brandeis.edu
 *  Assignment: Test the validation method of ArduinoClass example
 *  Which is useful in validating user input
 *  Date: May 17, 2019
 *  Sources: 
 *  Bugs:
 */
package enums;

import static org.junit.Assert.*;

import org.junit.Test;

public class ArduinoClassExampleTest {
	//adds a newline to the example responces
	String[]incorrectReponces={ArduinoClassExample.AUTHOR.toString()+"\n"
			"ArduinoClassExample.\n","Jacob Smith\n","Brandeis University Robotics\n","This class does a lot\n","",""};
	  CLASSNAME 		
	  AUTHOR   		
	  ORGANIZATION 
	  HEADERCOMMENTS 	
	  SUPPORTEDBOARDS	
	  VARIABLES  		
	  PRIVATEMETHODS 
	  PUBLICMETHODS 
	 private void addNewLines(){
		  ArduinoClassExample[]examples=ArduinoClassExample.values();
		  String[]incorrectResponce=new String[examples.length];
		  for(int i=0;i<examples.length;i++){
			  
		  }
	  } 
	  
	@Test
	public void test() {
		 System.out.println("Shows how enum can be used to validate user input");
	        System.out.println("INPUT\tVALIDATION RESPONCE");
	        //too many newlines
	        String className="Timer\n";
	        String result=ArduinoClassExample.CLASSNAME.validate(className);
	        System.out.print(className+":"+result);
	        //too many spaces
	        className="Timer ";
	        result=ArduinoClassExample.CLASSNAME.validate(className);
	        System.out.print(className+":"+result);
	        //too many bars
	        className="Timer|";
	        result=ArduinoClassExample.CLASSNAME.validate(className);
	        System.out.print(className+":"+result);
	        
	}

}
