package enums;

/** Name: Jacob Smith
 *  Email:jsmith2021@brandeis.edu
 *  Assignment: Personal Study, an enum to contain correct string representations
 *  of arduino classes for unit testing. The hardcoding of arduino classes allow for 
 *  special characters to be explicit and for them to be tested easily with string compare assertions
 *  Date: May 16, 2019
 *  Sources: 
 */


public enum ArduinoClassHardCoded {
	
    CPP( 
    		"/* Written by Jacob Smith for Brandeis Robotics Club 2019/05/15\n"+
    		"A timer class to allow the user to create loops and maintain program control\n"+
    		"Boards supported: ARDUINO_AVR_UNO ESP8266_WEMOSD1R1*/\n\n"+

    		"//only compile this class if the board is correct\n"+
    		"if defined(ARDUINO_AVR_UNO) | defined (ESP8266_WEMOSD1R1)\n\n"+

    		"//includes the libraries of code necessary to make this one work\n"+
    		"#include <Timer.h>\n\n"+

    		"//Creates a new Timer object\n"+
    		"Timer::Timer() {\n"    +
    		"    initTime=millis();\n\n"+

    		"}\n\n"+

    		"//resets the Initial Time\n"+
    		"long Timer::resetTime() {\n" +   
    		"    initTime=millis();\n"+
    		"    return getTime();\n\n"+

    		"}\n\n"+

    		"//returns the current time\n"+
    		"long Timer::getTime() {\n" +
    		"    return millis()-initTime;\n\n"+

    		"}\n\n"+

    		"//returns the current time and the initial time\n"+
    		"long Timer::getAndResetTime() {\n"  +
    		"    long curTime=getTime();\n"+
    		"    resetTime();\n"+
    		"    return curTime;\n\n"+

    		"}\n\n"+

    		"#endif");
    
    //a string to store the representation of the class
    private String hardCode;
    
    /** A private constructor to create an enum with class hardCode
     * */
    ArduinoClassHardCoded(String hardCode) {
        this.hardCode=hardCode;
    }
   

    /**Displays capabilities of the enum
     * */
    public static void main(String[] args) {
        System.out.println("Prints out the different enum names and contents");
        System.out.println("________________________________________________");
        for (ArduinoClassHardCoded a : ArduinoClassHardCoded.values()){
        	System.out.println(a.name()+"\n_______________________________________");
        	System.out.println(a.toString());
        }
          
    }
    
    /**returns a string representation of the enum, with name, prompt, and format
     * */
    public String toString(){
    	return hardCode;
    }
}